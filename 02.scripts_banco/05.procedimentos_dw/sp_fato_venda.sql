create or alter procedure sp_fato_venda(@data_carga datetime)
as
begin
		DECLARE @DATA_VENDA DATETIME,
				@ID_VIOLACAO INT,
				@ID_TEMPO INT,
				@ID_LOJA INT,
				@ID_PRODUTO INT,
				@ID_TIPO_PAGAMENTO INT,
				@COD_LOJA INT,
				@COD_PRODUTO INT,
				@COD_TIPO_PAGAMENTO INT,
				@COD_VENDA INT,
				@VOLUME INT,
				@VALOR NUMERIC (10,2)

		DECLARE C_VENDA CURSOR FOR
		SELECT DATA_VENDA, COD_LOJA, COD_PRODUTO, COD_TIPO_PAGAMENTO, COD_VENDA, VOLUME, VALOR
		FROM TB_AUX_VENDA
		WHERE @data_carga = DATA_CARGA

		OPEN C_VENDA
		FETCH C_VENDA INTO @DATA_VENDA, @COD_LOJA, @COD_PRODUTO, @COD_TIPO_PAGAMENTO, @COD_VENDA, @VOLUME, @VALOR

		WHILE @@FETCH_STATUS = 0
		BEGIN

				SET @ID_TEMPO = NULL
				SET @ID_LOJA = NULL
				SET @ID_PRODUTO = NULL
				SET @ID_TIPO_PAGAMENTO = NULL
				SET @ID_VIOLACAO = NULL

				SET @ID_TEMPO = (SELECT T.ID_TEMPO FROM DIM_TEMPO T WHERE T.DATA = @DATA_VENDA AND T.NIVEL='DIA')
				SET @ID_LOJA = (SELECT L.ID_LOJA FROM DIM_LOJA L WHERE L.COD_LOJA = @COD_LOJA)
				SET @ID_PRODUTO = (SELECT P.ID_PRODUTO FROM DIM_PRODUTO P WHERE P.COD_PRODUTO = @COD_PRODUTO)
				SET @ID_TIPO_PAGAMENTO = (SELECT T.ID_TIPO_PAGAMENTO FROM DIM_TIPO_PAGAMENTO T WHERE T.COD_TIPO_PAGAMENTO = @COD_TIPO_PAGAMENTO)
				
				IF @ID_TEMPO IS NULL OR @ID_LOJA IS NULL OR @ID_PRODUTO IS NULL OR @ID_TIPO_PAGAMENTO IS NULL OR @VOLUME <= 0 OR @VALOR <= 0
				BEGIN
						IF @ID_TEMPO IS NULL
						BEGIN
								INSERT INTO TB_VIO_VENDA (DATA_CARGA,DATA_VENDA,COD_LOJA,COD_PRODUTO,COD_TIPO_PAGAMENTO,COD_VENDA,VOLUME,VALOR,DT_ERRO, VIOLACAO)
								VALUES (@data_carga, @DATA_VENDA, @COD_LOJA, @COD_PRODUTO, @COD_TIPO_PAGAMENTO, @COD_VENDA, @VOLUME, @VALOR, GETDATE(), 'DATA ERRADA')
						END
				
						IF @ID_LOJA IS NULL
						BEGIN
								IF NOT EXISTS (SELECT 1 FROM TB_VIO_VENDA WHERE COD_VENDA = @COD_VENDA)
								BEGIN
										INSERT INTO TB_VIO_VENDA (DATA_CARGA,DATA_VENDA,COD_LOJA,COD_PRODUTO,COD_TIPO_PAGAMENTO,COD_VENDA,VOLUME,VALOR,DT_ERRO, VIOLACAO)
										VALUES (@data_carga, @DATA_VENDA, @COD_LOJA, @COD_PRODUTO, @COD_TIPO_PAGAMENTO, @COD_VENDA, @VOLUME, @VALOR, GETDATE(), 'LOJA ERRADA')
								END
								ELSE
								BEGIN
										SELECT @ID_VIOLACAO = ID_VIOLACAO 
										FROM TB_VIO_VENDA 
										WHERE COD_VENDA = @COD_VENDA

										UPDATE TB_VIO_VENDA
										SET VIOLACAO = VIOLACAO + ', LOJA ERRADA'
										WHERE COD_VENDA = @COD_VENDA
								END
						END

						IF @ID_PRODUTO IS NULL
						BEGIN
								IF NOT EXISTS (SELECT 1 FROM TB_VIO_VENDA WHERE COD_VENDA = @COD_VENDA)
								BEGIN
										INSERT INTO TB_VIO_VENDA (DATA_CARGA,DATA_VENDA,COD_LOJA,COD_PRODUTO,COD_TIPO_PAGAMENTO,COD_VENDA,VOLUME,VALOR,DT_ERRO, VIOLACAO)
										VALUES (@data_carga, @DATA_VENDA, @COD_LOJA, @COD_PRODUTO, @COD_TIPO_PAGAMENTO, @COD_VENDA, @VOLUME, @VALOR, GETDATE(), 'PRODUTO ERRADO')
								END
								ELSE
								BEGIN
										SELECT @ID_VIOLACAO = ID_VIOLACAO 
										FROM TB_VIO_VENDA 
										WHERE COD_VENDA = @COD_VENDA
										UPDATE TB_VIO_VENDA
										SET VIOLACAO = VIOLACAO + ', PRODUTO ERRADO'
										WHERE COD_VENDA = @COD_VENDA
								END
						END

						IF @ID_TIPO_PAGAMENTO IS NULL
						BEGIN
								IF NOT EXISTS (SELECT 1 FROM TB_VIO_VENDA WHERE COD_VENDA = @COD_VENDA)
								BEGIN
										INSERT INTO TB_VIO_VENDA (DATA_CARGA,DATA_VENDA,COD_LOJA,COD_PRODUTO,COD_TIPO_PAGAMENTO,COD_VENDA,VOLUME,VALOR,DT_ERRO, VIOLACAO)
										VALUES (@data_carga, @DATA_VENDA, @COD_LOJA, @COD_PRODUTO, @COD_TIPO_PAGAMENTO, @COD_VENDA, @VOLUME, @VALOR, GETDATE(), 'TIPO DO PAGAMENTO ERRADO')
								END
								ELSE
								BEGIN
										SELECT @ID_VIOLACAO = ID_VIOLACAO 
										FROM TB_VIO_VENDA 
										WHERE COD_VENDA = @COD_VENDA

										UPDATE TB_VIO_VENDA
										SET VIOLACAO = VIOLACAO + ', TIPO DO PAGAMENTO ERRADO'
										WHERE COD_VENDA = @COD_VENDA
								END
						END

						IF @VOLUME <= 0
						BEGIN
								IF NOT EXISTS (SELECT 1 FROM TB_VIO_VENDA WHERE COD_VENDA = @COD_VENDA)
								BEGIN
										INSERT INTO TB_VIO_VENDA (DATA_CARGA,DATA_VENDA,COD_LOJA,COD_PRODUTO,COD_TIPO_PAGAMENTO,COD_VENDA,VOLUME,VALOR,DT_ERRO, VIOLACAO)
										VALUES (@data_carga, @DATA_VENDA, @COD_LOJA, @COD_PRODUTO, @COD_TIPO_PAGAMENTO, @COD_VENDA, @VOLUME, @VALOR, GETDATE(), 'VOLUME A BAIXO DE ZERO')
								END
								ELSE
								BEGIN
										SELECT @ID_VIOLACAO = ID_VIOLACAO 
										FROM TB_VIO_VENDA 
										WHERE COD_VENDA = @COD_VENDA

										UPDATE TB_VIO_VENDA
										SET VIOLACAO = VIOLACAO + ', VOLUME A BAIXO DE ZERO'
										WHERE COD_VENDA = @COD_VENDA
								END
						END

						IF @VALOR <= 0
						BEGIN
								IF NOT EXISTS (SELECT 1 FROM TB_VIO_VENDA WHERE COD_VENDA = @COD_VENDA)
								BEGIN
										INSERT INTO TB_VIO_VENDA (DATA_CARGA,DATA_VENDA,COD_LOJA,COD_PRODUTO,COD_TIPO_PAGAMENTO,COD_VENDA,VOLUME,VALOR,DT_ERRO, VIOLACAO)
										VALUES (@data_carga, @DATA_VENDA, @COD_LOJA, @COD_PRODUTO, @COD_TIPO_PAGAMENTO, @COD_VENDA, @VOLUME, @VALOR, GETDATE(), 'VALOR A BAIXO DE ZERO')
								END
								ELSE
								BEGIN
										SELECT @ID_VIOLACAO = ID_VIOLACAO 
										FROM TB_VIO_VENDA 
										WHERE COD_VENDA = @COD_VENDA

										UPDATE TB_VIO_VENDA
										SET VIOLACAO = VIOLACAO + ', VALOR A BAIXO DE ZERO'
										WHERE COD_VENDA = @COD_VENDA
								END
						END
				END
				ELSE
				BEGIN
						IF NOT EXISTS (SELECT 1 FROM FATO_VENDA WHERE COD_VENDA = @COD_VENDA)
						BEGIN
								INSERT INTO FATO_VENDA(ID_TEMPO,ID_LOJA, ID_PRODUTO,ID_TIPO_PAGAMENTO,COD_VENDA,VOLUME,VALOR,QUANTIDADE) 
								VALUES (@ID_TEMPO,@ID_LOJA,@ID_PRODUTO,@ID_TIPO_PAGAMENTO,@COD_VENDA,@VOLUME,@VALOR, 1)
						END
						ELSE
						BEGIN
								UPDATE FATO_VENDA
								SET ID_TEMPO = @ID_TEMPO,
									ID_LOJA = @ID_LOJA,
									ID_PRODUTO = @ID_PRODUTO,
									ID_TIPO_PAGAMENTO = @ID_TIPO_PAGAMENTO,
									VOLUME = @VOLUME,
									VALOR = @VALOR
									WHERE COD_VENDA = @COD_VENDA
						END
				END
		FETCH C_VENDA INTO @DATA_VENDA, @COD_LOJA, @COD_PRODUTO, @COD_TIPO_PAGAMENTO, @COD_VENDA, @VOLUME, @VALOR
		END
	CLOSE C_VENDA
	DEALLOCATE C_VENDA
end



-- Teste

exec sp_fato_venda '20230321'

USE dw_lowlatency

select * from fato_venda
select * from TB_VIO_VENDA
select * from DIM_TEMPO
select * from TB_VENDA
select * from DIM_PRODUTO
select * from DIM_LOJA
select * from DIM_PRODUTO
select * from TB_AUX_VENDA

INSERT INTO TB_AUX_VENDA(DATA_CARGA,DATA_VENDA,COD_LOJA,COD_PRODUTO,COD_TIPO_PAGAMENTO,COD_VENDA,VOLUME,VALOR) 
VALUES ('20230321','20230321',1,1,1,1,1,1) 

INSERT INTO TB_AUX_VENDA(DATA_CARGA,DATA_VENDA,COD_LOJA,COD_PRODUTO,COD_TIPO_PAGAMENTO,COD_VENDA,VOLUME,VALOR) 
VALUES ('20230321','20230821',1,14,1,2,1,0) 

INSERT INTO TB_AUX_VENDA(DATA_CARGA,DATA_VENDA,COD_LOJA,COD_PRODUTO,COD_TIPO_PAGAMENTO,COD_VENDA,VOLUME,VALOR) 
VALUES ('20230321','20230821',1,14,1,3,0,0) 
