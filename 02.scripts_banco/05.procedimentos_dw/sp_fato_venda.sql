create or alter procedure sp_fato_venda(@data_carga datetime)
as
begin
		DECLARE @DATA_VENDA DATETIME,
				@ID_TEMPO INT,
				@ID_LOJA INT,
				@ID_PRODUTO INT,
				@ID_TIPO_PAGAMENTO INT,
				@COD_LOJA INT,
				@COD_PRODUTO INT,
				@COD_TIPO_PAGAMENTO INT,
				@COD_VENDA INT,
				@VOLUME INT,
				@VALOR NUMERIC (10,2)

		DECLARE C_VENDA CURSOR FOR
		SELECT DATA_VENDA, COD_LOJA, COD_PRODUTO, COD_TIPO_PAGAMENTO, COD_VENDA, VOLUME, VALOR
		FROM TB_AUX_VENDA
		WHERE @data_carga = DATA_CARGA

		OPEN C_VENDA
		FETCH C_VENDA INTO @DATA_VENDA, @COD_LOJA, @COD_PRODUTO, @COD_TIPO_PAGAMENTO, @COD_VENDA, @VOLUME, @VALOR

		WHILE @@FETCH_STATUS = 0
		BEGIN

				SET @ID_TEMPO = (SELECT T.ID_TEMPO FROM DIM_TEMPO T WHERE T.DATA = @DATA_VENDA)
				SET @ID_LOJA = (SELECT L.ID_LOJA FROM DIM_LOJA L WHERE L.COD_LOJA = @COD_LOJA)
				SET @ID_PRODUTO = (SELECT P.ID_PRODUTO FROM DIM_PRODUTO P WHERE P.COD_PRODUTO = @COD_PRODUTO)
				SET @ID_TIPO_PAGAMENTO = (SELECT T.ID_TIPO_PAGAMENTO FROM DIM_TIPO_PAGAMENTO T WHERE T.COD_TIPO_PAGAMENTO = @COD_TIPO_PAGAMENTO)

				IF NOT EXISTS (SELECT 1 FROM FATO_VENDA WHERE COD_VENDA = @COD_VENDA)
				BEGIN
						INSERT INTO FATO_VENDA(ID_TEMPO,ID_LOJA, ID_PRODUTO,ID_TIPO_PAGAMENTO,COD_VENDA,VOLUME,VALOR,QUANTIDADE) 
						VALUES (@ID_TEMPO,@ID_LOJA,@ID_PRODUTO,@ID_TIPO_PAGAMENTO,@COD_VENDA,@VOLUME,@VALOR, 1)
				END
				ELSE
				BEGIN
						UPDATE FATO_VENDA
						SET ID_TEMPO = @ID_TEMPO,
							ID_LOJA = @ID_LOJA,
							ID_PRODUTO = @ID_PRODUTO,
							ID_TIPO_PAGAMENTO = @ID_TIPO_PAGAMENTO,
							VOLUME = @VOLUME,
							VALOR = @VALOR
						WHERE COD_VENDA = @COD_VENDA
				END

		FETCH C_VENDA INTO @DATA_VENDA, @COD_LOJA, @COD_PRODUTO, @COD_TIPO_PAGAMENTO, @COD_VENDA, @VOLUME, @VALOR
		END
	CLOSE C_VENDA
	DEALLOCATE C_VENDA
end



-- Teste

exec sp_fato_venda '20230321'

USE dw_lowlatency

select * from fato_venda

DELETE fato_venda
